version: "3"
name: backend

services:
  # Production
  backend:
    build: .
    container_name: backend
    restart: always
    depends_on:
      - mongo
    ports:
      - 5000:5000
    environment:
      NODE_ENV: prod
    command:
      - prod
    profiles:
      - prod

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./mongo/init-prod.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    profiles:
      - prod

  # Development
  backend-dev:
    build: .
    container_name: backend
    restart: unless-stopped
    depends_on:
      - mongo-dev
    ports:
      - 5000:5000
    volumes:
      - .:/app
      - /app/node_modules/
    environment:
      NODE_ENV: dev
    command:
      - dev
    profiles:
      - dev

  mongo-dev:
    image: mongo
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./mongo/init-dev.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    profiles:
      - dev

  mongo-express-dev:
    image: mongo-express
    container_name: mongo-express
    restart: unless-stopped
    depends_on:
      - mongo-dev
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo-dev:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    profiles:
      - dev

  # Test
  backend-test:
    build: .
    container_name: backend
    restart: unless-stopped
    depends_on:
      - mongo-test
    ports:
      - 5000:5000
    volumes:
      - .:/app
      - /app/node_modules/
    environment:
      NODE_ENV: test
    command:
      - test
    profiles:
      - test

  mongo-test:
    image: mongo
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./mongo/init-test.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    profiles:
      - test

  mongo-express-test:
    image: mongo-express
    container_name: mongo-express
    restart: unless-stopped
    depends_on:
      - mongo-test
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo-test:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    profiles:
      - test
